I"A<h2 id="零-核心问题">零. 核心问题</h2>
<ol>
  <li>什么是可拓展性？
    <ul>
      <li>对现有系统影响最小的情况下，系统功能可持续拓展和提升的能力</li>
      <li>当系统增加新功能时，不需要对现有系统的结构和代码进行修改</li>
    </ul>
  </li>
  <li>如何实现可拓展性？
    <ul>
      <li>系统架构设计层面的开闭原则</li>
    </ul>
  </li>
</ol>

<h2 id="一-构建可拓展的网站架构">一. 构建可拓展的网站架构</h2>

<ol>
  <li>低耦合
    <ul>
      <li>作用
        <ul>
          <li>系统更容易拓展</li>
          <li>模块更容易复用</li>
          <li>让开发过程和维护变得更加轻松和容易管理</li>
        </ul>
      </li>
      <li>将一个大系统切分为N个低耦合的子模块
        <ul>
          <li>包含横向的业务模块</li>
          <li>包含纵向的基础技术模块</li>
        </ul>
      </li>
      <li>对架构师的要求
        <ul>
          <li>专业的技术和经验</li>
          <li>对业务场景的理解</li>
          <li>对人性的把握、对世界的认知</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>模块化
    <ul>
      <li>作用
        <ul>
          <li>一组功能的集合</li>
          <li>提高系统的复用程度</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<h2 id="二-利用分布式消息队列降低系统耦合性">二. 利用分布式消息队列降低系统耦合性</h2>

<ol>
  <li>事件驱动架构
    <ul>
      <li>定义：
        <ul>
          <li>在低耦合的模块之间传输事件消息，保持模块的松散耦合，并借助事件消息的通信完成模块间合作</li>
        </ul>
      </li>
      <li>典型实例
        <ul>
          <li>生产者-消费者模式</li>
        </ul>
      </li>
      <li>在大型网站中的使用
        <ul>
          <li>分布式消息队列</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>分布式消息队列
    <ul>
      <li>定义
        <ul>
          <li>先进先出的数据结构</li>
          <li>应用程序通过远程访问接口使用分布式消息队列，对消息存取操作</li>
          <li>实现分布式的异步调用</li>
        </ul>
      </li>
      <li>作用
        <ul>
          <li>伸缩性：类似无状态的服务器，扩容简单</li>
          <li>可用性：内存队列、磁盘存储、分布式</li>
        </ul>
      </li>
      <li>具体的方案
        <ul>
          <li>MySQL</li>
          <li>ActiveMQ</li>
          <li>RocketMQ</li>
          <li>Kafka</li>
        </ul>
      </li>
    </ul>
  </li>
</ol>

<h2 id="三-利用分布式服务构建可复用的业务平台">三. 利用分布式服务构建可复用的业务平台</h2>

<ol>
  <li>常见问题及方案
    <ol>
      <li>大型系统面临的问题
        <ol>
          <li>编译、部署困难</li>
          <li>代码分支管理困难</li>
          <li>数据库连接耗尽</li>
          <li>新增业务困难</li>
        </ol>
      </li>
      <li>解决方案
        <ol>
          <li>横向拆分
            <ul>
              <li>复用的业务拆分出来，独立部署
                <ul>
                  <li>新增业务只需要调用分布式服务，不依赖具体的模块代码</li>
                  <li>模块只要保证接口一致</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>纵向拆分
            <ul>
              <li>梳理业务，剥离业务，独立Web应用</li>
            </ul>
          </li>
        </ol>
      </li>
    </ol>
  </li>
  <li></li>
</ol>

<h2 id="四-可拓展的数据结构">四. 可拓展的数据结构</h2>

<h2 id="五-利用开发平台建设网站生态圈">五. 利用开发平台建设网站生态圈</h2>

:ET