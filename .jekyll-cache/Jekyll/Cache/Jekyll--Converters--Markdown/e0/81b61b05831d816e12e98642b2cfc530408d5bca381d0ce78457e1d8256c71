I"p<h4 id="自己的经历">自己的经历</h4>

<ol>
  <li>VB
    <ul>
      <li>第一门接触的语言。记忆太久远了，只记得当时拖拽出的一个简单的程序。</li>
    </ul>
  </li>
  <li>C
    <ul>
      <li>指针指针还是指针</li>
    </ul>
  </li>
  <li>Objective-C@2014
    <ul>
      <li>开始搞iOS是学的一门语言，作为C的超集开发还是不错的，中括号的语法&amp;消息机制很独特。特立独行的一门语言。</li>
    </ul>
  </li>
  <li>Python@2015
    <ul>
      <li>简单&amp;方便</li>
      <li>15年的时候在中国大学MOOC看课程，偶然遇到的。</li>
      <li>现在经常用来爬数据、数据分析、做一些处理事情的小工具。</li>
      <li>2018年给公司的签名库添加了<a href="https://pypi.org/project/wicc/">Python版本</a>。</li>
    </ul>
  </li>
  <li>Perl@2015
    <ul>
      <li>处理文本的</li>
      <li>据说每年都有一个大赛，专门比赛最难看懂，挺有趣的操作</li>
    </ul>
  </li>
  <li>R@2016
    <ul>
      <li>16年接触的语言，公司需要做数据分析。</li>
      <li>当时研究了一段时间，包很多，但是性能确实不行。</li>
    </ul>
  </li>
  <li>Swift@2017 ✨
    <ul>
      <li>虽然在16年接触过Swift, 不过3.0以前的版本确实改动太大。</li>
      <li>比OC用起来舒服多了</li>
      <li>Perfect框架可以写后端程序，不过觉得走偏了。</li>
      <li>SwiftUI如果能实现跨平台的话那就完美了</li>
    </ul>
  </li>
  <li>Kotlin@2018 ✨
    <ul>
      <li>公司换了一个CTO, 带来了一套技术体系Kotlin+Gradle+Spring</li>
      <li>Kotlin和Java能百分之百的替换</li>
      <li>至今觉得Kotlin的when操作在这么多种语言中最方便，没有之一。</li>
      <li>只会Kotlin不会Java自己都觉得有点奇怪</li>
    </ul>
  </li>
  <li>Java@2018 ✨
    <ul>
      <li>有点索然无味的编程语言，很适合大众。</li>
      <li>确实适合大型工程，不需要你写的多么精彩。</li>
    </ul>
  </li>
  <li>Julia@2018
    <ul>
      <li>在学人工智能的时候听到的</li>
      <li>买了本Julia的书，看了几天</li>
      <li>据说很快，不过确实没怎么用过。</li>
    </ul>
  </li>
  <li>ADA@2019
    <ul>
      <li>这个比较意外，19年埃塞波音737MAX空难，据说是程序出了Bug.</li>
      <li>后来新闻里面提到该飞机的操作系统是ADA写的，出于好奇去官网下了编译器。</li>
      <li>简单写了几个Demo。</li>
      <li>挺想用ADA开发一个雷达，哈哈哈哈，想想而已。</li>
    </ul>
  </li>
  <li>Lua@2019
    <ul>
      <li>公司的链上合约执行依赖于Lua的虚拟机，为了尝试写个合约，看了一段时间。</li>
    </ul>
  </li>
  <li>Rust@2020
    <ul>
      <li>至今还记得刚开始调试时候的跑不起来囧态。</li>
      <li>想了解Libra项目，就去学了一下Rust去调试终端程序。</li>
      <li>后来跑去用Actix-web写了一个简单的网站。觉得自己跑偏了。</li>
    </ul>
  </li>
  <li>Go@2021</li>
</ol>

<ul>
  <li>最近决定要学一下这个语言。</li>
  <li>顺道复习一下C</li>
</ul>

<ol>
  <li>Dart@2021
    <ul>
      <li>后面Flutter会更广泛，节省人力，多端通吃</li>
      <li>我的好奇心还是忍不住。</li>
    </ul>
  </li>
</ol>

<h4 id="对学习编程语言的一些观点">对学习编程语言的一些观点</h4>
<ol>
  <li>底层逻辑
    <ul>
      <li>这门语言主要解决哪一类问题</li>
      <li>这门语言擅长和不擅长的</li>
    </ul>
  </li>
  <li>默认掌握的一些知识
    <ul>
      <li>架构设计</li>
      <li>设计模式</li>
    </ul>
  </li>
  <li>目标导向
    <ul>
      <li>自己领域的语言学明白</li>
      <li>基础API</li>
      <li>开源库</li>
    </ul>
  </li>
  <li>个人觉得最好
    <ul>
      <li>学一下Python，解放生产力</li>
      <li>学一下Dart, 客户端</li>
      <li>学一下Go, 后端（并发&amp;指针&amp;编译优势）</li>
    </ul>
  </li>
  <li>学习路径
    <ul>
      <li>明确目的</li>
      <li>先会一门</li>
      <li>深入一门</li>
    </ul>
  </li>
</ol>

<h4 id="一个快速入门一门语言的网站">一个快速入门一门语言的网站</h4>
<ul>
  <li><a href="https://learnxinyminutes.com/">Learn X in Y min</a></li>
</ul>

:ET