---
layout: post
title: 如何学习一门编程语言？
date: 2019-07-06 00:00:00 +0800
categories: 【方法论】
tag: 【编程语言】
---

> 先学习几门，然后总结，实践与理论相结合。

最近几年学会了几门编程语言：
- C
- Objective-C
- C++
- Java
- Swift
- Kotlin
- Go
- Python
- Rust
- Ada
- ...

#### 编程语言层次

1. ##### 你学习编程的目的？：
	> 编程就是为了解决问题
	- 成为一名黑客？
	- 成为一名架构师？
		- 前端有木有？
			- Vue有木有？
			- React有木有？
			- Angular有木有？
		- 后端有木有？
			- PHP有木有？
			- Java有木有？
				- SpringBoot有木有？
					- netty?
					- jetty?
			- Python有木有？
				- Django?
				- Flask?
				- Tornado?
			- 数据持久化有木有？
				- Mysql?
				- Oracle
				- 
		- 移动端有木有？
			- Android有木有？
			- iOS有木有？
				- MVC?
				- MVVM?
					- RxSwift?
				- MVP?

	> 目的决定态度，态度决定高度。
	
2. ##### 基础环境：
	1. 安装语言的开发环境（编译器、解释器、IDE）
	2. 选一个适合自己的编辑器
		- [Emacs](http://www.gnu.org/software/emacs/)
		- [Vim](https://www.vim.org/)
		- [Sublime](https://www.sublimetext.com/3)
		- [VScode](https://code.visualstudio.com/)
		> 最好选一款编辑器用到很溜

3. ##### 语法层面：
	- 面向过程编程
		1. 关键字
		2. 代码规范
		3. 数据类型
		4. 运算符
		5. 流程控制
		6. 函数
	- 面向对象编程
		1. 类
		2. 封装
		3. 继承
		4. 多态
	- 函数式编程
		1. 高阶函数
		2. Map、reduce、filter

4. ##### 设计模式：
	- 可参考书籍：
		- 《Head First设计模式》
		- 《23种设计模式》
		- 《图解设计模式》
		- 《Swift设计模式》
	- 创建型
		- 单例模式
		- 工厂模式
	- 结构型
		- 门面模式
		- 代理模式
	- 行为型
		- 观察者模式
		- 命令模式
		- 模版模式

5. ##### 架构设计：
	- 可参考书籍：
		- 《从零开始学架构》
		- 《聊聊架构》
		- 《架构即未来》
	- 开发人员架构设计
		- 
		- 
	- 软件架构
		-
		- 
	- 通用架构
		-
		- 













