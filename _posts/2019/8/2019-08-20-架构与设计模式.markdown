---
layout: post
title: 架构与设计模式
date: 2019-08-20 00:00:00 +0800
categories: 【iOS】
tag: 【移动端】
---

#### 依赖
[设计模式](https://www.jianshu.com/p/e5c69c7b8c00)
[iOS开发](https://www.jianshu.com/p/7b5ca753ed6a)
[iOS技能树](https://github.com/BohdanOrlov/iOS-Developer-Roadmap)

## 索引

1. 设计的六大原则
2. 架构的目的与目标
3. 

---
### 设计的七大原则

S | Single Responsibility Principle 	| 单一职责原则
O | Open Close Principle 				| 开闭原则
L | Liskov Substitution Principle 		| 里氏替换原则
I | Interface Segregation Principle		| 接口隔离原则
D | Dependence Inversion Principle		| 依赖倒置原则
L | Law Of Demeter					 	| 迪米特法则
C | Composite/Aggregate Reuse Principle | CARP组合/聚合复用原则

⚠️ 面向对象SOLID原则

#### 单一职责原则
- 一个类只承担一个职责

#### 开闭原则
- 对软件实体的改动，最好用扩展而非修改的方式。

#### 里氏替换原则
- 子类可以扩展父类的方法，但不应该复写父类的方法。

#### 接口隔离原则
- 对象不应被强迫依赖它不使用的方法.

#### 依赖倒置原则
- 面向接口编程，提取出事务的本质和共性。

#### 迪米特法则
- 一个对象应该对其他对象保持最少的了解，实现低耦合、高内聚。

#### 组合/聚合复用原则
- 就是说要少用继承，多用合成关系来实现。


---
### 架构的目的与目标


---
### 架构的设计方法和步骤


---
### 常用的架构

#### MVC 

#### MVVM

#### VIPER

#### MVP

